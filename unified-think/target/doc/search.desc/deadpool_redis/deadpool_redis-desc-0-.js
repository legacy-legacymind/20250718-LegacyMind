searchState.loadedDescShard("deadpool_redis", 0, "Deadpool for Redis Latest Version Unsafe forbidden Rust …\nUse an async function as a hook\nBackend reported an error.\nError caused by the backend.\nThis variant is used for errors while building the pool\nType alias for using <code>deadpool::managed::BuildError</code> with …\n<code>Pool</code> has been closed.\nConfiguration object.\nThis variant is used for configuration errors\nThis error is returned if the configuration contains an …\nWrapper around <code>redis::aio::MultiplexedConnection</code>.\nThis is a 1:1 copy of the <code>redis::ConnectionAddr</code> …\nThis is a 1:1 copy of the <code>redis::ConnectionInfo</code> struct. …\nType alias for using <code>deadpool::managed::CreatePoolError</code> …\nUse a plain function (non-async) as a hook\nType alias for using <code>deadpool::managed::Hook</code> with <code>redis</code>.\nType alias for using <code>deadpool::managed::HookError</code> with …\n<code>Manager</code> for creating and recycling <code>redis</code> connections.\nHook failed for some other reason.\nStatistics regarding an object returned by the pool\n[<code>Runtime</code>] is required du to configured timeouts.\nNo <code>Runtime</code> was specified.\nType alias for using <code>deadpool::managed::Object</code> with <code>redis</code>.\nType alias for using <code>deadpool::managed::Pool</code> with <code>redis</code>.\nType alias for using <code>deadpool::managed::PoolBuilder</code> with …\n<code>Pool</code> configuration.\nType alias for using <code>deadpool::managed::PoolError</code> with …\nA <code>post_create</code> hook reported an error.\nThis is a 1:1 copy of the <code>redis::ProtocolVersion</code> struct. …\n…\n…\nThe <code>redis</code> crate returned an error when parsing the config\nThis is a 1:1 copy of the <code>redis::RedisConnectionInfo</code> …\nEnumeration for picking a runtime implementation.\nThe current pool status.\nFormat for this is <code>(host, port)</code>.\nFormat for this is <code>(host, port)</code>.\nTimeout happened.\nTimeouts when getting <code>Object</code>s from a <code>Pool</code>.\n<code>tokio</code> 1.0 runtime.\nFormat for this is the path to the unix socket.\nBoth url and connection were specified in the config\nA connection address for where to connect to.\nAccess the age of this object\nThe number of available objects in the pool.\nCreates a new <code>PoolBuilder</code> using this <code>Config</code>.\n<code>redis::ConnectionInfo</code> structure.\nTimeout when creating a new object.\nCreates a new <code>Pool</code> using this <code>Config</code>.\nThe instant when this object was created\nThe database number to use. This is usually <code>0</code>.\nCreates a new <code>PoolConfig</code> with the <code>max_size</code> being set to …\nCreates an empty <code>Timeouts</code> config (no timeouts set).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Config</code> from the given Redis ConnectionInfo …\nCreates a new <code>Config</code> from the given Redis URL (like …\nReturns <code>deadpool::managed::PoolConfig</code> which can be used to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the time elapsed when this object was last used\nMaximum size of the <code>Pool</code>.\nThe maximum size of the pool.\nCreates a new <code>Manager</code> from the given <code>params</code>.\nCreates a new <code>PoolConfig</code> without any timeouts and with the …\nCreate an empty <code>Timeouts</code> config (no timeouts set).\nOptionally a password that should be used for connection.\nPool configuration.\nVersion of the protocol to use.\nQueue mode of the <code>Pool</code>.\nTimeout when recycling an object.\nThe number of times the objects was recycled\nThe instant when this object was last used\nA boxed connection address for where to connect to.\nThe current size of the pool.\nRuns the given closure on a thread where blocking is …\nRuns the given closure on a thread where blocking is …\nTakes this <code>Connection</code> from its <code>Pool</code> permanently.\nRequires a <code>Future</code> to complete before the specified <code>duration</code>…\nTimeouts of the <code>Pool</code>.\nRedis URL.\nOptionally a username that should be used for connection.\nTimeout when waiting for a slot to become available.\nCreates a new <code>Timeouts</code> config with only the <code>wait</code> timeout …\nThe number of futures waiting for an object.\nHostname.\nDisable hostname verification when connecting.\nPort.")