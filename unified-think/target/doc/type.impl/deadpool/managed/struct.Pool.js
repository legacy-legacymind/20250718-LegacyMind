(function() {
    var type_impls = Object.fromEntries([["deadpool_redis",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Pool%3CM,+W%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Pool%3CM,+W%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, W&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Pool&lt;M, W&gt;<div class=\"where\">where\n    M: Manager,\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Object&lt;M&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Pool&lt;M, W&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.88.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.88.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","deadpool_redis::Pool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Pool%3CM,+W%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Pool%3CM,+W%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, W&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Pool&lt;M, W&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + Manager,\n    &lt;M as Manager&gt;::Type: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Object&lt;M&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.88.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.88.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","deadpool_redis::Pool"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pool%3CM,+W%3E\" class=\"impl\"><a href=\"#impl-Pool%3CM,+W%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, W&gt; Pool&lt;M, W&gt;<div class=\"where\">where\n    M: Manager,\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Object&lt;M&gt;&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.builder\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">builder</a>(manager: M) -&gt; PoolBuilder&lt;M, W&gt;</h4></section></summary><div class=\"docblock\"><p>Instantiates a builder for a new [<code>Pool</code>].</p>\n<p>This is the only way to create a [<code>Pool</code>] instance.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">get</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;W, PoolError&lt;&lt;M as Manager&gt;::Error&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Retrieves an [<code>Object</code>] from this [<code>Pool</code>] or waits for one to\nbecome available.</p>\n<h5 id=\"errors\"><a class=\"doc-anchor\" href=\"#errors\">§</a>Errors</h5>\n<p>See [<code>PoolError</code>] for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.timeout_get\" class=\"method\"><h4 class=\"code-header\">pub async fn <a class=\"fn\">timeout_get</a>(\n    &amp;self,\n    timeouts: &amp;<a class=\"struct\" href=\"deadpool_redis/struct.Timeouts.html\" title=\"struct deadpool_redis::Timeouts\">Timeouts</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.88.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;W, PoolError&lt;&lt;M as Manager&gt;::Error&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Retrieves an [<code>Object</code>] from this [<code>Pool</code>] using a different <code>timeout</code>\nthan the configured one.</p>\n<h5 id=\"errors-1\"><a class=\"doc-anchor\" href=\"#errors-1\">§</a>Errors</h5>\n<p>See [<code>PoolError</code>] for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">resize</a>(&amp;self, max_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Resize the pool. This change the <code>max_size</code> of the pool dropping\nexcess objects and/or making space for new ones.</p>\n<p>If the pool is closed this method does nothing. The [<code>Pool::status</code>] method\nalways reports a <code>max_size</code> of 0 for closed pools.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.retain\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">retain</a>(\n    &amp;self,\n    predicate: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.88.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;&lt;M as Manager&gt;::Type, <a class=\"struct\" href=\"deadpool_redis/struct.Metrics.html\" title=\"struct deadpool_redis::Metrics\">Metrics</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a>,\n) -&gt; RetainResult&lt;&lt;M as Manager&gt;::Type&gt;</h4></section></summary><div class=\"docblock\"><p>Retains only the objects specified by the given function.</p>\n<p>This function is typically used to remove objects from\nthe pool based on their current state or metrics.</p>\n<p><strong>Caution:</strong> This function blocks the entire pool while\nit is running. Therefore the given function should not\nblock.</p>\n<p>The following example starts a background task that\nruns every 30 seconds and removes objects from the pool\nthat haven’t been used for more than one minute.</p>\n\n<div class=\"example-wrap ignore\"><a href=\"#\" class=\"tooltip\" title=\"This example is not tested\">ⓘ</a><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>interval = Duration::from_secs(<span class=\"number\">30</span>);\n<span class=\"kw\">let </span>max_age = Duration::from_secs(<span class=\"number\">60</span>);\ntokio::spawn(<span class=\"kw\">async move </span>{\n    <span class=\"kw\">loop </span>{\n        tokio::time::sleep(interval).<span class=\"kw\">await</span>;\n        pool.retain(|<span class=\"kw\">_</span>, metrics| metrics.last_used() &lt; max_age);\n    }\n});</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.timeouts\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">timeouts</a>(&amp;self) -&gt; <a class=\"struct\" href=\"deadpool_redis/struct.Timeouts.html\" title=\"struct deadpool_redis::Timeouts\">Timeouts</a></h4></section></summary><div class=\"docblock\"><p>Get current timeout configuration</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.close\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">close</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Closes this [<code>Pool</code>].</p>\n<p>All current and future tasks waiting for [<code>Object</code>]s will return\n[<code>PoolError::Closed</code>] immediately.</p>\n<p>This operation resizes the pool to 0.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_closed\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_closed</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Indicates whether this [<code>Pool</code>] has been closed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.status\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">status</a>(&amp;self) -&gt; <a class=\"struct\" href=\"deadpool_redis/struct.Status.html\" title=\"struct deadpool_redis::Status\">Status</a></h4></section></summary><div class=\"docblock\"><p>Retrieves <a href=\"deadpool_redis/struct.Status.html\" title=\"struct deadpool_redis::Status\"><code>Status</code></a> of this [<code>Pool</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.manager\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">manager</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.88.0/std/primitive.reference.html\">&amp;M</a></h4></section></summary><div class=\"docblock\"><p>Returns [<code>Manager</code>] of this [<code>Pool</code>].</p>\n</div></details></div></details>",0,"deadpool_redis::Pool"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[11256]}