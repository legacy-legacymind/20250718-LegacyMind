services:
  # Qdrant Vector Database - Identity & Context Layer
  qdrant:
    image: qdrant/qdrant:v1.14.1
    container_name: legacymind_qdrant
    restart: always
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC API
    expose:
      - 6335  # Internal cluster communication
    environment:
      QDRANT__SERVICE__API_KEY: ${QDRANT_API_KEY}
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
      QDRANT__LOG_LEVEL: INFO
      QDRANT__SERVICE__MAX_REQUEST_SIZE_MB: 256
      QDRANT__SERVICE__MAX_WORKERS: 0
      QDRANT__STORAGE__STORAGE_PATH: /qdrant/storage
      QDRANT__STORAGE__SNAPSHOTS_PATH: /qdrant/snapshots
    volumes:
      - ./Memory/qdrant/storage:/qdrant/storage:z
      - ./Memory/qdrant/snapshots:/qdrant/snapshots:z
      #- ./qdrant/config/production.yaml:/qdrant/config/production.yaml:ro
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G
    networks:
      - legacymind_network  # PostgreSQL 17 - Structured Data Layer
  postgres:
    image: postgres:17
    container_name: legacymind_postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    volumes:
      - ./Memory/postgres/data:/var/lib/postgresql/data:z
      - ./MCPs/InternalMCPs/UnifiedIntelligence/src/schema.sql:/docker-entrypoint-initdb.d/1_unified_intelligence_schema.sql:ro
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G
    networks:
      - legacymind_network

  # Redis 8 - Speed Layer
  redis:
    image: redis:8-alpine
    container_name: legacymind_redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 2gb --maxmemory-policy allkeys-lru --appendonly yes --appendfsync everysec
    volumes:
      - ./Memory/redis/data:/data:z
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    networks:
      - legacymind_network

  unified-intelligence:
    image: docker-unified-intelligence
    build:
      context: ./MCPs/InternalMCPs/UnifiedIntelligence
      dockerfile: Dockerfile
    container_name: legacymind_unified_intelligence
    restart: always
    stdin_open: true
    tty: true
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@legacymind_postgres:5432/${POSTGRES_DB}
      - QDRANT_URL=http://legacymind_qdrant:6333
      - QDRANT_API_KEY=${QDRANT_API_KEY}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@legacymind_redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - INSTANCE=UI
      - NODE_ENV=production
    networks:
      - legacymind_network

  unified-knowledge:
    image: docker-unified-knowledge
    build:
      context: ./MCPs/InternalMCPs/UnifiedKnowledge
      dockerfile: Dockerfile
    container_name: legacymind_unified_knowledge
    restart: unless-stopped
    stdin_open: true
    tty: true
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@legacymind_postgres:5432/${POSTGRES_DB}
      - QDRANT_HOST=legacymind_qdrant
      - QDRANT_PORT=6333
      - QDRANT_API_KEY=${QDRANT_API_KEY}
      - REDIS_URL=redis://:${REDIS_PASSWORD}@legacymind_redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - NODE_ENV=production
    depends_on:
      - postgres
      - redis
      - qdrant
    networks:
      - legacymind_network

networks:
  legacymind_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  qdrant_storage:
  postgres_data:
  redis_data: